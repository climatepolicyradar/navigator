"""make lookup names unique

Revision ID: 0006
Revises: 0005
Create Date: 2022-04-29 10:05:06.101904

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "0006"
down_revision = "0005"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f("uq_category__name"), "category", ["name"])
    op.create_unique_constraint(
        op.f("uq_document_type__name"), "document_type", ["name"]
    )
    op.create_unique_constraint(op.f("uq_framework__name"), "framework", ["name"])
    op.create_unique_constraint(op.f("uq_hazard__name"), "hazard", ["name"])
    op.create_unique_constraint(
        op.f("uq_instrument__name"), "instrument", ["name", "source_id"]
    )
    op.create_unique_constraint(op.f("uq_response__name"), "response", ["name"])
    op.create_unique_constraint(
        op.f("uq_sector__name"), "sector", ["name", "source_id"]
    )
    op.create_unique_constraint(op.f("uq_source__name"), "source", ["name"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_source__name"), "source", type_="unique")
    op.drop_constraint(op.f("uq_sector__name"), "sector", type_="unique")
    op.drop_constraint(op.f("uq_response__name"), "response", type_="unique")
    op.drop_constraint(op.f("uq_instrument__name"), "instrument", type_="unique")
    op.drop_constraint(op.f("uq_hazard__name"), "hazard", type_="unique")
    op.drop_constraint(op.f("uq_framework__name"), "framework", type_="unique")
    op.drop_constraint(op.f("uq_document_type__name"), "document_type", type_="unique")
    op.drop_constraint(op.f("uq_category__name"), "category", type_="unique")
    # ### end Alembic commands ###
