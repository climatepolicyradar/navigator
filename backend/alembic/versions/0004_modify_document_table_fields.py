"""modify_document_table_fields

Revision ID: 0004
Revises: 0003
Create Date: 2022-09-14 18:13:20.053344

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0004"
down_revision = "0003"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("document", sa.Column("slug", sa.Text(), nullable=True))
    op.add_column("document", sa.Column("import_id", sa.Text(), nullable=True))
    op.alter_column("document", "source_url", existing_type=sa.TEXT(), nullable=True)
    op.alter_column("document", "url", existing_type=sa.TEXT(), nullable=True)
    op.drop_constraint("uq_document__name", "document", type_="unique")
    op.create_unique_constraint(
        op.f("uq_document__source_id"), "document", ["source_id", "import_id"]
    )
    op.drop_constraint("fk_document__updated_by__user", "document", type_="foreignkey")
    op.drop_constraint("fk_document__created_by__user", "document", type_="foreignkey")
    op.drop_column("document", "created_by")
    op.drop_column("document", "updated_by")
    op.drop_column("document", "loaded_ts")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "document",
        sa.Column(
            "loaded_ts",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "document",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "document",
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_document__created_by__user", "document", "user", ["created_by"], ["id"]
    )
    op.create_foreign_key(
        "fk_document__updated_by__user", "document", "user", ["updated_by"], ["id"]
    )
    op.drop_constraint(op.f("uq_document__source_id"), "document", type_="unique")
    op.create_unique_constraint(
        "uq_document__name",
        "document",
        ["name", "geography_id", "type_id", "source_id", "source_url"],
    )
    op.alter_column("document", "url", existing_type=sa.TEXT(), nullable=False)
    op.alter_column("document", "source_url", existing_type=sa.TEXT(), nullable=False)
    op.drop_column("document", "import_id")
    op.drop_column("document", "slug")
    # ### end Alembic commands ###
