name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  IMAGE_NAME1: navigator_backend
  IMAGE_NAME2: navigator_frontend

# https://github.com/marketplace/actions/docker-layer-caching
jobs:
  build-start-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use .env.example
        run:  cp .env.example .env

      - name: Get node Container
        run:  docker pull node:16-alpine3.13

      - name: Get python Container
        run:  docker pull python:3.9

      - name: Build
        run: |
          docker pull docker.io/library/hello-world:latest
          docker tag docker.io/library/hello-world:latest hello-world:latest
          # docker-compose build
          # docker images

      # - name: Build docker-compose stack
      #   run:  make start

      # - name: verify backend is up
      #   run:  curl http://localhost:8000/api/docs

      # - name: Run backend tests
      #   run:  make test_backend
      
      # - name: docker
      #   run: |
      #     docker-compose logs
      #     docker-compose ps
      #     docker ps -a
      #     ls -la
      
      # - name: verify frontend is up
      #   run:  curl http://localhost:3000
      
      # - name: Configure frontend test env
      #   run:  cp frontend/e2e/.env.example frontend/e2e/.env

      # - name: Get cypress Container      
      #   run:  docker pull cypress/included:10.1.0

      # - name: Build frontend tests
      #   run:  cd frontend/e2e && docker-compose build

      # - name: Run frontend tests
      #   run:  cd frontend/e2e && docker-compose up --abort-on-container-exit --exit-code-from cypress
      
      # - name: Run backend search tests
      #   run:  make test_backend_search
      
      - name: Log Dump
        if:   always()
        run:  docker-compose logs

      - name: Run Integration Tests
        run: echo TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO

      - name: Push Images to ECR
        run: |
          .github/retag-and-push.sh hello-world latest
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
