name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  IMAGE_TAG: ${{ github.sha }}
  BACKEND_TAR: docker-image/navigator_backend.tar
  FRONTEND_TAR: docker-image/navigator_frontend.tar

# https://github.com/marketplace/actions/docker-layer-caching
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use .env.example
        run:  cp .env.example .env 

        # Pull the latest image to build, and avoid caching pull-only images.
        # (docker pull is faster than caching in most cases.)
      - name: Pull images
        run:  docker-compose pull
        # In this step, this action saves a list of existing images,
        # the cache is created without them in the post run.
        # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Build and Package Container Images
        run: |
          docker-compose build
          mkdir -p docker-image
          docker save -o ${BACKEND_TAR} cpr/navigator_backend:${IMAGE_TAG}
          docker save -o ${FRONTEND_TAR} cpr/navigator_frontend:${IMAGE_TAG}
      - uses: actions/upload-artifact@v1
        with:
          name: docker-image
          path: docker-image

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docker-image    

      - name: Load Images
        run: |
          docker load -i ${BACKEND_TAR}
          docker load -i ${FRONTEND_TAR}

      - name: Build docker-compose stack
        run:  make start
      - name: verify backend is up
        run:  curl http://localhost:8000/api/docs
      - name: Run backend tests
        run:  make test_backend && make test_backend_search
      - name: docker
        run: |
          docker-compose logs
          docker-compose ps
          docker ps -a
          ls -la
      - name: verify frontend is up
        run:  curl http://localhost:3000
      - name: Configure frontend test env
        run:  cp frontend/e2e/.env.example frontend/e2e/.env
      - name: Run frontend tests
        run:  make test_frontend
      - name: Log Dump
        if:   always()
        run:  docker-compose logs


  integration-tests-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docker-image    

      - name: Load Images
        run: |
          docker load -i ${BACKEND_TAR}
          docker load -i ${FRONTEND_TAR}

      - name: Run Integration Tests
        run: echo TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO

      - name: "Push Images if on dev/main if: github.ref == 'refs/heads/master'"
        run: |
          .github/retag-and-push.sh navigator_backend ${IMAGE_TAG}
          .github/retag-and-push.sh navigator_frontend ${IMAGE_TAG}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}